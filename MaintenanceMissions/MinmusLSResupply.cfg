CONTRACT_TYPE:NEEDS[TACLifeSupport]
{
    name = MinmusLSResupply
    title = Do a supply run to @/targetVessel.
    group = KSSMaintenanceMissions
description = Apparently letting our Kerbonauts starve will generate bad publicity, run some food supplies up to @/targetVessel
    notes = This contract doesn't care how much food you take... but bear in mind it may be a long time before it comes up again.
    synopsis = Take some food supplies up to @/targetVessel.
    completedMessage = Mmm freeze dried bacon *drools*
    minExpiry = 1
    maxExpiry = 30
    deadline = Random(1,500)
    cancellable = true
    declinable = true
    targetBody = Minmus
    rewardScience = 0.0
    rewardReputation = Random(1.0, 20.0)
    rewardFunds = Random(50000, 500000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 50000.0)
    advanceFunds = Random(1, 50000.0)
    weight = 0.8
DATA
{
    type = Vessel
	requiredValue = true
    targetVessel = [ MinmusStationNEW ].Random()
}
DATA
	{
	type = CelestialBody
	requiredValue = true
	targetBody = [ Minmus ].Random()
	}
	REQUIREMENT
	{
	name = StationCheck
	type = Expression
	
	expression = (@/targetVessel.IsOrbiting())
	}
	PARAMETER
	{
	name = LSMission
	type = Sequence
	
	PARAMETER
	{
	name = Food
	type = HasResource
	
	resource = Food
	minQuantity = 1
	
	title = Have food on board your vessel
	}
	
	PARAMETER
	{
	name = DockwithStation
    type = Docking
	vessel = MinmusStationNEW
	defineDockedVessel = MinmusStationNEW
	title = Dock with @/targetVessel
	}
	}

	REQUIREMENT
{
name = All
type = All
REQUIREMENT
{
    name = Rotation
    type = CompleteContract

    contractType = MinmusCrewRotation
	
	minCount = 0
	cooldownDuration = Random(30d, 120d)
}
REQUIREMENT
{
    name = Tier3
    type = CompleteContract

    contractType = MinmusRepairFaultyModule
	
	minCount = 0
	cooldownDuration = Random(30, 120d)
	}
	REQUIREMENT
	{
    name = Tier3
    type = CompleteContract

    contractType = MinmusReplaceFaultyModule
	
	minCount = 0
	cooldownDuration = Random(30d, 120d)
}
	REQUIREMENT
	{
    name = Tier3
    type = CompleteContract

    contractType = MinmusEvacuate
	
	minCount = 0
	cooldownDuration = Random(30d, 120d)
}
	REQUIREMENT
	{
    name = Tier3
    type = CompleteContract

    contractType = MinmusLSResupply
	
	minCount = 0
	cooldownDuration = Random(30d, 90d)
}
}
}
