CONTRACT_TYPE
{
    name = DunaServiceModule
    title = Send a Service Module to @/targetVessel
    group = KSSMaintenanceMissions
    description = @/targetVessel doesn't have a Service Module. It's a long way from home. We'd better give our Kerbals a Plan B.
    synopsis = Launch a Service Module for @/targetVessel
    completedMessage = Service Module in place! Good job!
	minExpiry = 1
	maxExpiry = 30
    cancellable = true
    declinable = true
    targetBody = Duna
	maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 0.0
    rewardReputation = Random(1,20.0)
    rewardFunds = Random(50000, 500000.0)
    failureReputation = Random(1,10.0)
    failureFunds = Random(1,50000.0)
    advanceFunds = Random(1,50000.0)
DATA
{
    type = Vessel
	requiredValue = true
    targetVessel = [ DunaStation ].Random()
}

	PARAMETER
	{
	name = PartValidation
    type = PartValidation
	partModule = ModuleLandingLeg
	title = Must be capable of landing on @/targetBody
	}
	PARAMETER
{
    name = Docking
    type = Docking
    vessel = DunaStation
    defineDockedVessel = DunaStationSM
    title = Dock with @/targetVessel
}
	REQUIREMENT
	{
	name = StationCheck
	type = Expression
	
	expression = (@/targetVessel.IsOrbiting())
	}
	REQUIREMENT
	{
    name = CompleteContract
    type = CompleteContract
	contractType = Evacuate
	cooldownDuration = 30d
	}
}