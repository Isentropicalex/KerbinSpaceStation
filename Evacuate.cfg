CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = Evacuate
    title = Evacuate @/targetVessel1
    group = KerbinTier3
    description = We're picking up some worrying readings from our instruments on @/targetVessel1. To be on the safe side, we think you had better evacuate! (quickly)
    synopsis = Evacuate @/targetVessel1
    completedMessage = Phew, it was a false alarm. Still, well done for saving everybody.
	weight = 0.2
    minExpiry = 1
    maxExpiry = 30
    deadline = 500
    cancellable = false
    declinable = false
    prestige = Significant
    rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(50000.0, 500000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 50000.0)
    advanceFunds = Random(1, 50000.0)
		
		DATA
{
    type = Vessel
	requiredValue = true
    targetVessel1 = [ LKOStationNEW, MunStationNEW, MinmusStationNEW ].Where(v => v.CrewCount()>0).Random()
}
DATA
	{
	type = CelestialBody
	requiredValue = true
	targetBody1 = @/targetVessel1.CelestialBody()
	}

	PARAMETER
{
    name = VesselParameterGroup
    type = VesselParameterGroup
    title = Fully evacuate @/targetVessel1
    vessel = @/targetVessel1
	
    PARAMETER
    {
        name = HasCrew
        type = HasCrew
		minCrew = 0
		maxCrew = 0
		title = Leave no Kerbals on board @/targetVessel1.
		 }
	}
	
	REQUIREMENT
	{
	name = StationCheck
	type = Expression
	
	expression = (@/targetVessel1.IsOrbiting())
	}
}