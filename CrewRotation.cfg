CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = CrewRotation
    title = Space Station Crew Rotation
	group = KerbinTier3
    description = Time to give your crew a break. Go and rotate the crew @/targetVessel1.
    synopsis = Go and rotate the crew of @/targetVessel1.
    completedMessage = Mission Complete! The returned crew members are going for a pint. Care to join?
    minExpiry = 1
    maxExpiry = 7
    deadline = Random(500, 1000)
    cancellable = true
    declinable = true
    maxSimultaneous = 1
	rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(50000.0, 500000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 50000.0)
    advanceFunds = Random(1, 50000.0)
	weight = 0.8
	
	DATA
{
    type = Vessel
	requiredValue = true
    targetVessel1 = [ LKOStationNEW, MunStationNEW, MinmusStationNEW ].Where(v => v.ResourceQuantity(Food)>0 || v.ResourceQuantity(Supplies)>0 || v.ResourceQuantity(LifeSupport)>0).Random()
}
DATA
	{
	type = CelestialBody
	requiredValue = true
	targetBody1 = @/targetVessel1.CelestialBody()
	}

PARAMETER
{
    name = Rotation
    type = VesselParameterGroup
    title = Send up a new Crew.
 
    PARAMETER
{
    name = Docking
    type = Docking
	vessel = @/targetVessel1
	title = Dock with @/targetVessel1
	disableOnStateChange = true
}
		PARAMETER
{
    name = HasCrew
    type = HasCrew
    minCrew = Random(1, 5)
   disableOnStateChange = true
}
}
PARAMETER
{
    name = ReturnHome
    type = ReturnHome
    title = Rotate the crew and return home
	completeInSequence = true
}
	REQUIREMENT
	{
	name = StationCheck
	type = Expression
	
	expression = (@/targetVessel1.IsOrbiting())
	}
REQUIREMENT
{
name = CompleteContract
type = CompleteContract
minCount = 0
contractType = CrewRotation
cooldownDuration = 10d
}
}