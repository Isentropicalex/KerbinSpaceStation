CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = MinmusStationCore
	group = KSSCoreMissions
    title = Launch the Minmus Space Station!
    description = We've been very happy with our station around Kerbin. Let's put one around Minmus now!
    synopsis = Build a new Space Station in orbit around Minmus.
    completedMessage = The Station is in place!

    // Contract min/max expiry in days.  Default is a contract that does not
        // expire.
        minExpiry = 1
        maxExpiry = 30
        deadline = Random(500, 1000)
        cancellable = true
        declinable = true
        targetBody = Minmus
//Rewards
        rewardScience = 0
        rewardReputation = Random(1.0, 100.0)
        rewardFunds = Random(50000.0, 500000.0)
        failureReputation = Random(1.0, 100.0)
        failureFunds = Random(50000.0, 500000.0)
        advanceFunds = Random(50000.0, 500000.0)

DATA
{
    type = Vessel
	requiredValue = false
    targetVessel = [ MinmusStationNEW ].Random()
}

 PARAMETER
    {
        name = NewStation
        type = VesselParameterGroup
        hideChildren = true
        title = Launch a new Station Core into Minmus Orbit
        notes = The station must include a docking port and support 4 Kerbals.  This can be done in one launch, or multiple launches.
        //defines the LKO Station.
        define = MinmusStationNEW

        PARAMETER
        {
            name = LKO
            type = Orbit
            //Reach Low Minmus Orbit.
            targetBody = Minmus
            situation = ORBITING
            maxAltitude = 49000
        }

        //Check for the Station Docking Port
        PARAMETER
        {
            name = PartValidation
            type = PartValidation
            hideChildren = true
            // PartModule(s) to check for.  Optional, and can be specified multiple times.
            partModule = ModuleDockingNode
            minCount = 1
            disableonStateChange = false
            title = Have a Docking Port on board.
        }

        PARAMETER
        {
            name = HabModuleChild
            type = HasCrewCapacity

            // Minimum count, default = 1
            minCapacity = 4
            title = Support 4 Kerbals
            disableonStateChange = false
        }

        PARAMETER
        {
            name = RTGSolar
            type = Any
            title = Have one of the following power generators
            disableonStateChange = false

            PARAMETER
            {
                name = PartValidationRTG
                type = PartValidation
                hideChildren = true
                disableonStateChange = false
                title = 1 or more solar panels

                // PartModule(s) to check for.  Optional, and can be specified multiple times.
                partModule = ModuleDeployableSolarPanel

                // Minimum count, default = 1
                minCount = 1
            }
                
            PARAMETER
            {
                name = PartValidationSolar
                type = PartValidation
                hideChildren = true
                disableonStateChange = false
                title = 1 or more generators

                // PartModule(s) to check for.  Optional, and can be specified multiple times. Looking for an RTG
                partModule = ModuleGenerator

                // Minimum count, default = 1
                minCount = 1
            }
        }

        PARAMETER:NEEDS[!StationScience]
        {
            name = ScienceLab
            type = PartValidation
            title = Have a Science Lab on board

            hideChildren = true
            // The name of the part to check for. Optional.
            partModule = ModuleScienceLab
            disableonStateChange = false
        }

        PARAMETER:NEEDS[StationScience]
        {
            name = StationScienceSupport
            type = Any
            title = Have any type of Science Lab on board

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = 1 or more standard science labs
                hideChildren = true

                // The name of the part to check for. Optional.
                partModule = ModuleScienceLab
                disableonStateChange = false
            }

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = 1 or more research facilities
                hideChildren = true

                // The name of the part to check for. Optional.
                partModule = ResearchFacility
                title = Station Science Lab
                disableonStateChange = false
				optional = true
            }
        }

        PARAMETER
        {
            name = PartValidation
            type = PartValidation
            hideChildren = true
            disableonStateChange = false
            
            part = cupola
            minCount = 1
            title = Include a cupola
        }
    }
	
REQUIREMENT
{
    name = TechResearched
    type = TechResearched
    tech = specializedConstruction
}
REQUIREMENT
{
    name = NoStation
    type = Expression

    expression = (!@/targetVessel.IsOrbiting())
}
REQUIREMENT
	{
    name = LKOStationCheck
    type = CompleteContract

    contractType = KerbinStationCore
	
	minCount = 1
}
REQUIREMENT
{
    name = Orbit
    type = Orbit

    // Target celestial body.  Defaults to the targetBody of the contract.
    targetBody = Minmus
}
}