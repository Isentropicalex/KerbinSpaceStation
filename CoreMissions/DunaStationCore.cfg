CONTRACT_TYPE
{
    name = DunaStationCore
    group = KSSCoreMissions
    title = Launch the Duna Space Station!
    description = "Duna is there, waiting to be reached." - Buzz Kerman
    synopsis = Launch the Duna Space Station!
    completedMessage = Station Complete!

    // Contract min/max expiry in days.
    minExpiry = 1
    maxExpiry = 30

    // Contract can be cancelled and declined.
    cancellable = true
    declinable = true

    // Target Duna
    targetBody = Duna

    // Contract rewards - no science random other rewards.
    rewardScience = 0
    rewardReputation = Random(1.0, 100.0)
    rewardFunds = Random(50000.0, 500000.0)
    failureReputation = Random(1.0, 100.0)
    failureFunds = Random(50000.0, 500000.0)
    advanceFunds = Random(50000.0, 500000.0)
	maxSimultaneous = 1

    // Failsafe Data.
    DATA
    {
        type = Vessel
        requiredValue = false
        targetVessel = [ DunaStation ].Random()
    }

    DATA
    {
        type = CelestialBody
        requiredValue = true
        targetBody = [Duna ].Random()
    }

    //Define the new station.
    PARAMETER
    {
        name = NewStation
        type = VesselParameterGroup
        hideChildren = true
        title = Launch a new Station into Duna Orbit.
        notes = The station must include 1 Docking Port and support 4 Kerbals.  This can be done in one launch, or multiple launches.
        //defines the Duna Station.
        define = DunaStation

        PARAMETER
        {
            name = Duna
            type = Orbit
            targetBody = Duna
            situation = ORBITING
            maxAltitude = 140000
        }

        //Check for the Station Docking Port
        PARAMETER
        {
            name = PartValidation
            type = PartValidation
            hideChildren = true
            // PartModule(s) to check for.  Optional, and can be specified multiple times.
            partModule = ModuleDockingNode
            minCount = 1
            disableonStateChange = false
            title = Have a Docking Port on board.
        }

        PARAMETER
        {
            name = HabModuleChild
            type = HasCrewCapacity

            // Minimum count, default = 1
            minCapacity = 4
            title = Support 4 Kerbals
            disableonStateChange = false
        }

        PARAMETER
        {
            name = RTGSolar
            type = Any
            title = Have one of the following power generators
            disableonStateChange = false

            PARAMETER
            {
                name = PartValidationRTG
                type = PartValidation
                hideChildren = true
                disableonStateChange = false
                title = 1 or more solar panels

                // PartModule(s) to check for.  Optional, and can be specified multiple times.
                partModule = ModuleDeployableSolarPanel

                // Minimum count, default = 1
                minCount = 1
            }
                
            PARAMETER
            {
                name = PartValidationSolar
                type = PartValidation
                hideChildren = true
                disableonStateChange = false
                title = 1 or more generators

                // PartModule(s) to check for.  Optional, and can be specified multiple times. Looking for an RTG
                partModule = ModuleGenerator

                // Minimum count, default = 1
                minCount = 1
            }
        }

        PARAMETER:NEEDS[!StationScience]
        {
            name = ScienceLab
            type = PartValidation
            title = Have a Science Lab on board
            hideChildren = true
            partModule = ModuleScienceLab
            disableonStateChange = false
        }

        PARAMETER:NEEDS[StationScience]
        {
            name = StationScienceSupport
            type = Any
            title = Have any type of Science Lab on board

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = 1 or more standard science labs
                hideChildren = true
                partModule = ModuleScienceLab
                disableonStateChange = false
            }

            PARAMETER
            {
                name = PartValidation
                type = PartValidation
                title = 1 or more research facilities
                hideChildren = true
				partModule = ResearchFacility
                title = Station Science Lab
                disableonStateChange = false
            }
        }

        PARAMETER
        {
            name = PartValidation
            type = PartValidation
            hideChildren = true
            disableonStateChange = false
            part = cupola
            minCount = 1
            title = Include a cupola
			optional = true
        }
    }
    // Make sure the Core part is actually unlocked.
    REQUIREMENT
    {
        name = TechResearched
        type = TechResearched

        // The technology that needs to have been researched.  Take special note that
        // this does not get validated - if you make a typo, the requirement will
        // always return false.
        tech = specializedConstruction
    }
    // Check Station doesn't already exist
    REQUIREMENT
    {
        name = NoStation
        type = Expression

        expression = (!@/targetVessel.IsOrbiting())
    }
    // Make sure we've reached Orbit
    REQUIREMENT
    {
        name = Orbit
        type = Orbit
        targetBody = @/targetBody
    }
	REQUIREMENT
 name = CompleteContract
    type = CompleteContract
	    minCount = 1
		contractType = KerbinStationCore
}